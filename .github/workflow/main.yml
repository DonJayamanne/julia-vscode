name: Build and Test

on:
  pull_request:
    branches:
      - master
      - ci
  check_run:
    types: [rerequested, requested_action]
  push:
    branches:
      - master
      - ci
  workflow_dispatch:
env:
  NODE_VERSION: 12.14.1
  JULIA_VERSION: 1.5.2
  MOCHA_REPORTER_JUNIT: true # Use the mocha-multi-reporters and send output to both console (spec) and JUnit (mocha-junit-reporter). Also enables a reporter which exits the process running the tests if it haven't already.
  COVERAGE_REPORTS: tests-coverage-reports
  TEST_RESULTS_DIRECTORY: .
  TEST_RESULTS_GLOB: '**/test-results*.xml'
  VSIX_NAME: julialang.Julia.vsix

jobs:

  build-vsix:
    needs: pick_environment
    name: Build VSIX
    runs-on: ubuntu-latest
    if: github.repository == 'julia-vscode/julia-vscode'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node ${{env.NODE_VERSION}}
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{env.NODE_VERSION}}

      - name: Build VSIX
        uses: ./.github/actions/build-vsix
        id: build-vsix

      - uses: actions/upload-artifact@v2
        with:
          name: ${{env.VSIX_NAME}}
          name: ${{env.VSIX_NAME}}

  lint:
    name: Lint
    runs-on: ubuntu-latest
    if: github.repository == 'julia-vscode/julia-vscode'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies (npm ci)
        run: npm ci

      - name: Run linting on TypeScript code (eslint)
        run: npx eslint -c .eslintrc.json --ext .ts src

      # - name: Run prettier on TypeScript code
      #   run: npx prettier 'src/**/*.ts*' --check

      # - name: Run prettier on JavaScript code
      #   run: npx prettier 'build/**/*.js' --check
